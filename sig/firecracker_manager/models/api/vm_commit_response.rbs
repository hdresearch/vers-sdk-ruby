module FirecrackerManager
  module Models
    module API
      type vm_commit_response =
        {
          data: FirecrackerManager::API::VmCommitResponse::Data,
          duration_ns: Integer,
          operation_code: FirecrackerManager::Models::API::VmCommitResponse::operation_code,
          operation_id: String,
          time_start: Integer
        }

      class VmCommitResponse < FirecrackerManager::Internal::Type::BaseModel
        attr_accessor data: FirecrackerManager::API::VmCommitResponse::Data

        attr_accessor duration_ns: Integer

        attr_accessor operation_code: FirecrackerManager::Models::API::VmCommitResponse::operation_code

        attr_accessor operation_id: String

        attr_accessor time_start: Integer

        def initialize: (
          data: FirecrackerManager::API::VmCommitResponse::Data,
          duration_ns: Integer,
          operation_code: FirecrackerManager::Models::API::VmCommitResponse::operation_code,
          operation_id: String,
          time_start: Integer
        ) -> void

        def to_hash: -> {
          data: FirecrackerManager::API::VmCommitResponse::Data,
          duration_ns: Integer,
          operation_code: FirecrackerManager::Models::API::VmCommitResponse::operation_code,
          operation_id: String,
          time_start: Integer
        }

        type data =
          { cluster_id: String, commit_id: String, host_architecture: String }

        class Data < FirecrackerManager::Internal::Type::BaseModel
          attr_accessor cluster_id: String

          attr_accessor commit_id: String

          attr_accessor host_architecture: String

          def initialize: (
            cluster_id: String,
            commit_id: String,
            host_architecture: String
          ) -> void

          def to_hash: -> {
            cluster_id: String,
            commit_id: String,
            host_architecture: String
          }
        end

        type operation_code =
          :list_clusters
          | :get_cluster
          | :create_cluster
          | :delete_cluster
          | :update_cluster
          | :get_cluster_ssh_key
          | :list_vms
          | :get_vm
          | :update_vm
          | :branch_vm
          | :commit_vm
          | :delete_vm
          | :get_vm_ssh_key
          | :upload_rootfs
          | :delete_rootfs
          | :list_rootfs

        module OperationCode
          extend FirecrackerManager::Internal::Type::Enum

          LIST_CLUSTERS: :list_clusters
          GET_CLUSTER: :get_cluster
          CREATE_CLUSTER: :create_cluster
          DELETE_CLUSTER: :delete_cluster
          UPDATE_CLUSTER: :update_cluster
          GET_CLUSTER_SSH_KEY: :get_cluster_ssh_key
          LIST_VMS: :list_vms
          GET_VM: :get_vm
          UPDATE_VM: :update_vm
          BRANCH_VM: :branch_vm
          COMMIT_VM: :commit_vm
          DELETE_VM: :delete_vm
          GET_VM_SSH_KEY: :get_vm_ssh_key
          UPLOAD_ROOTFS: :upload_rootfs
          DELETE_ROOTFS: :delete_rootfs
          LIST_ROOTFS: :list_rootfs

          def self?.values: -> ::Array[FirecrackerManager::Models::API::VmCommitResponse::operation_code]
        end
      end
    end
  end
end
